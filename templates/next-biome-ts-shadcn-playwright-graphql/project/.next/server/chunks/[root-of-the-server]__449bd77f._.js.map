{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/juanb/OneDrive/Desktop/Ivan/Dev/tools/create-projects/templates/next-biome-ts-shadcn-playwright-graphql/project/src/app/api/graphql/route.ts"],"sourcesContent":["import { startServerAndCreateNextHandler } from \"@as-integrations/next\";\r\nimport { ApolloServer } from \"@apollo/server\";\r\nimport type { NextRequest } from \"next/server\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst typeDefs = gql`\r\n  type Query {\r\n    hello: String\r\n  }\r\n`;\r\n\r\nconst resolvers = {\r\n  Query: {\r\n    hello: () => \"Hello world!\",\r\n  },\r\n};\r\n\r\nconst server = new ApolloServer({\r\n  typeDefs,\r\n  resolvers,\r\n});\r\n\r\n// Typescript: req has the type NextRequest\r\nconst handler = startServerAndCreateNextHandler<NextRequest>(server, {\r\n  context: async (req) => ({ req }),\r\n});\r\n\r\nexport { handler as GET, handler as POST };\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAEA;;;;AAEA,MAAM,WAAW,qOAAA,CAAA,UAAG,CAAC;;;;AAIrB,CAAC;AAED,MAAM,YAAY;IAChB,OAAO;QACL,OAAO,IAAM;IACf;AACF;AAEA,MAAM,SAAS,IAAI,4PAAA,CAAA,eAAY,CAAC;IAC9B;IACA;AACF;AAEA,2CAA2C;AAC3C,MAAM,UAAU,CAAA,GAAA,yQAAA,CAAA,kCAA+B,AAAD,EAAe,QAAQ;IACnE,SAAS,OAAO,MAAQ,CAAC;YAAE;QAAI,CAAC;AAClC","debugId":null}}]
}